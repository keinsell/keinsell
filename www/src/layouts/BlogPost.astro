---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage, tags } = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			.post-tag {
				@apply inline-block px-2 py-1 text-xs bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-400 rounded;
			}
		</style>
	</head>

	<body class="min-h-screen bg-white dark:bg-gray-950 text-gray-900 dark:text-gray-100">
		<Header />
		<main class="max-w-3xl mx-auto px-4 py-8">
			<article>
				<!-- Hero Image -->
				{heroImage && (
					<div class="mb-8">
						<img 
							src={heroImage} 
							alt={title}
							class="w-full rounded-lg"
						/>
					</div>
				)}

				<!-- Article Header -->
				<header class="mb-8">
					<h1 class="text-3xl font-bold mb-4">
						{title}
					</h1>
					
					<div class="flex flex-col sm:flex-row sm:items-center gap-4 mb-4 text-sm text-gray-500 dark:text-gray-400">
						<div class="flex items-center gap-4">
							<FormattedDate date={pubDate} />
							{updatedDate && (
								<span>Updated <FormattedDate date={updatedDate} /></span>
							)}
						</div>
						
						{tags && tags.length > 0 && (
							<div class="flex flex-wrap gap-1">
								{tags.map(tag => (
									<span class="post-tag">{tag}</span>
								))}
							</div>
						)}
					</div>
					
					{description && (
						<p class="text-lg text-gray-600 dark:text-gray-400 mb-6">
							{description}
						</p>
					)}
				</header>

				<!-- Article Content -->
				<div class="prose prose-gray dark:prose-invert max-w-none">
					<slot />
				</div>

				<!-- Article Footer -->
				<footer class="mt-12 pt-8 border-t border-gray-200 dark:border-gray-800">
					<div class="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
						<div class="text-sm text-gray-500 dark:text-gray-400">
							Published <FormattedDate date={pubDate} />
							{updatedDate && (
								<span class="block sm:inline">
									<span class="hidden sm:inline"> • </span>
									Updated <FormattedDate date={updatedDate} />
								</span>
							)}
						</div>
						
						<a 
							href="/blog" 
							class="text-sm text-blue-600 dark:text-blue-400 hover:underline"
						>
							← Back to blog
						</a>
					</div>
				</footer>
			</article>
		</main>
		<Footer />
	</body>
</html>