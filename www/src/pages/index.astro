---
import { getCollection } from 'astro:content';
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from '../components/FormattedDate.astro';

const posts = (await getCollection('blog')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
).slice(0, 5);
---

<html lang="en">
    <head>
        <BaseHead title="keinsell" description="Jakub Olan - Software engineer focused on Rust, OCaml, and building meaningful tools." />
        <style>
            .recent-post {
                @apply border-b border-gray-100 dark:border-gray-800 py-3 last:border-b-0;
            }
            .post-tag {
                @apply inline-block px-1.5 py-0.5 text-xs bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-400 rounded;
            }
        </style>
    </head>
    <body class="min-h-screen bg-white dark:bg-gray-950 text-gray-900 dark:text-gray-100">
        <Header />
        <main class="max-w-3xl mx-auto px-4 py-12">
            <!-- Introduction -->
            <section class="mb-12">
                <h1 class="text-3xl font-bold mb-6">keinsell</h1>
                <div class="prose prose-gray dark:prose-invert max-w-none">
                    <p class="text-lg text-gray-600 dark:text-gray-400 mb-4">
                        Software engineer building with <strong>Rust</strong> and <strong>OCaml</strong>. 
                        I focus on creating tools that matter - from terminal applications that track caffeine intake 
                        using neuroscience to exploring the intersection of finance and technology.
                    </p>
                    <p class="text-gray-600 dark:text-gray-400 mb-6">
                        Currently seeking opportunities where quality is measured by stability and maintainability, 
                        not just delivery speed. I'd rather work on meaningful projects with solid foundations 
                        than rush features built on shaky ground.
                    </p>
                    <div class="flex flex-wrap gap-3 text-sm">
                        <a href="/blog" class="text-blue-600 dark:text-blue-400 hover:underline">Read my blog</a>
                        <a href="/story" class="text-blue-600 dark:text-blue-400 hover:underline">My story</a>
                        <a href="https://github.com/keinsell" class="text-blue-600 dark:text-blue-400 hover:underline">GitHub</a>
                    </div>
                </div>
            </section>

            <!-- Recent Posts -->
            <section>
                <div class="flex items-center justify-between mb-6">
                    <h2 class="text-xl font-semibold">Recent Posts</h2>
                    <a href="/blog" class="text-sm text-blue-600 dark:text-blue-400 hover:underline">
                        View all â†’
                    </a>
                </div>
                
                <div class="bg-gray-50 dark:bg-gray-900 rounded-lg p-6">
                    {posts.map((post) => (
                        <article class="recent-post">
                            <div class="flex flex-col sm:flex-row sm:items-start sm:justify-between gap-2 mb-2">
                                <h3 class="font-medium">
                                    <a 
                                        href={`/blog/${post.slug}/`}
                                        class="text-gray-900 dark:text-gray-100 hover:text-blue-600 dark:hover:text-blue-400 no-underline"
                                    >
                                        {post.data.title}
                                    </a>
                                </h3>
                                <div class="text-sm text-gray-500 dark:text-gray-400 whitespace-nowrap">
                                    <FormattedDate date={post.data.pubDate} />
                                </div>
                            </div>
                            
                            <p class="text-sm text-gray-600 dark:text-gray-400 mb-2">
                                {post.data.description}
                            </p>
                            
                            {post.data.tags && post.data.tags.length > 0 && (
                                <div class="flex flex-wrap gap-1">
                                    {post.data.tags.map(tag => (
                                        <span class="post-tag">{tag}</span>
                                    ))}
                                </div>
                            )}
                        </article>
                    ))}
                </div>
            </section>
        </main>
        <Footer />
    </body>
</html>