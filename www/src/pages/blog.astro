---
import { getCollection } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';

const posts = (await getCollection('blog')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

// Get all unique tags
const allTags = [...new Set(posts.flatMap(post => post.data.tags || []))].sort();

// Get selected tag from URL params
const selectedTag = Astro.url.searchParams.get('tag');
const filteredPosts = selectedTag 
	? posts.filter(post => post.data.tags?.includes(selectedTag))
	: posts;
---

<html lang="en">
	<head>
		<BaseHead title="Blog" description="My thoughts and writings on technology, development, and more." />
		<style>
			.tag-filter {
				@apply inline-block px-2 py-1 text-xs bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-400 rounded mr-2 mb-2 no-underline;
			}
			.tag-filter:hover {
				@apply bg-gray-200 dark:bg-gray-700;
			}
			.tag-filter.active {
				@apply bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200;
			}
			.post-item {
				@apply border-b border-gray-100 dark:border-gray-800 py-4 hover:bg-gray-50 dark:hover:bg-gray-900/50 transition-colors;
			}
			.post-item:last-child {
				@apply border-b-0;
			}
			.post-meta {
				@apply text-sm text-gray-500 dark:text-gray-400 flex items-center gap-2;
			}
			.post-tag {
				@apply inline-block px-1.5 py-0.5 text-xs bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-400 rounded no-underline;
			}
			.post-tag:hover {
				@apply bg-gray-200 dark:bg-gray-700;
			}
		</style>
	</head>
	<body class="min-h-screen bg-white dark:bg-gray-950 text-gray-900 dark:text-gray-100">
		<Header />
		<main class="max-w-3xl mx-auto px-4 py-8">
			<div class="mb-8">
				<h1 class="text-2xl font-semibold mb-4">Blog</h1>
				
				<!-- Tag Filter -->
				<div class="mb-6">
					<div class="text-sm text-gray-500 dark:text-gray-400 mb-2">Filter by tag:</div>
					<div class="flex flex-wrap">
						<a 
							href="/blog" 
							class:list={["tag-filter", { active: !selectedTag }]}
						>
							all
						</a>
						{allTags.map(tag => (
							<a 
								href={`/blog?tag=${tag}`}
								class:list={["tag-filter", { active: selectedTag === tag }]}
							>
								{tag}
							</a>
						))}
					</div>
				</div>
			</div>
			
			<!-- Posts Timeline -->
			<div class="space-y-0">
				{filteredPosts.map((post) => (
					<article class="post-item">
						<div class="flex flex-col gap-2">
							<div class="flex flex-col sm:flex-row sm:items-start sm:justify-between gap-2">
								<h2 class="text-lg font-medium">
									<a 
										href={`/blog/${post.slug}/`}
										class="text-gray-900 dark:text-gray-100 hover:text-blue-600 dark:hover:text-blue-400 no-underline"
									>
										{post.data.title}
									</a>
								</h2>
								<div class="post-meta">
									<FormattedDate date={post.data.pubDate} />
								</div>
							</div>
							
							<p class="text-gray-600 dark:text-gray-400 text-sm leading-relaxed">
								{post.data.description}
							</p>
							
							{post.data.tags && post.data.tags.length > 0 && (
								<div class="flex flex-wrap gap-1 mt-1">
									{post.data.tags.map(tag => (
										<a 
											href={`/blog?tag=${tag}`}
											class="post-tag"
										>
											{tag}
										</a>
									))}
								</div>
							)}
						</div>
					</article>
				))}
				
				{filteredPosts.length === 0 && (
					<div class="text-center py-8 text-gray-500 dark:text-gray-400">
						No posts found for tag "{selectedTag}".
					</div>
				)}
			</div>
		</main>
		<Footer />
	</body>
</html>